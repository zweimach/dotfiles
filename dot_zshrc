# ┏━━━━━━━━━━━━━━━━━━━━━━━
# ┃ History
# ┗━━━━━━━━━━━━━━━━━━━━━━━
HISTFILE=~/.zsh_history
HISTSIZE=1000
SAVEHIST=5000
HISTORY_SUBSTRING_SEARCH_HIGHLIGHT_FOUND=1
HISTORY_SUBSTRING_SEARCH_HIGHLIGHT_NOT_FOUND=0


# ┏━━━━━━━━━━━━━━━━━━━━━━━
# ┃ Plugin
# ┗━━━━━━━━━━━━━━━━━━━━━━━
source <(antibody init)
antibody bundle <~/.zsh_plugins.txt


# ┏━━━━━━━━━━━━━━━━━━━━━━━
# ┃ Function & Completion
# ┗━━━━━━━━━━━━━━━━━━━━━━━
autoload -Uz compinit
compinit

autoload -U +X bashcompinit
bashcompinit

autoload -Uz url-quote-magic
zle -N self-insert url-quote-magic


# ┏━━━━━━━━━━━━━━━━━━━━━━━
# ┃ Keybinding
# ┗━━━━━━━━━━━━━━━━━━━━━━━
typeset -g -A key

if ((${+terminfo[smkx]})) && ((${+terminfo[rmkx]})); then
	function zle-line-init() {
		echoti smkx
	}
	function zle-line-finish() {
		echoti rmkx
	}
	zle -N zle-line-init
	zle -N zle-line-finish
fi

bindkey -e

key[Home]="${terminfo[khome]}"
key[End]="${terminfo[kend]}"
key[Backspace]="${terminfo[kbs]}"
key[Delete]="${terminfo[kdch1]}"
key[Up]="${terminfo[kcuu1]}"
key[Down]="${terminfo[kcud1]}"
key[Shift-Tab]="${terminfo[kcbt]}"

[[ -n "${key[Home]}" ]] && bindkey "${key[Home]}" beginning-of-line
[[ -n "${key[End]}" ]] && bindkey "${key[End]}" end-of-line
[[ -n "${key[Backspace]}" ]] && bindkey "${key[Backspace]}" backward-delete-char
[[ -n "${key[Delete]}" ]] && bindkey "${key[Delete]}" delete-char
[[ -n "${key[Up]}" ]] && bindkey "${key[Up]}" history-substring-search-up
[[ -n "${key[Down]}" ]] && bindkey "${key[Down]}" history-substring-search-down
[[ -n "${key[Shift - Tab]}" ]] && bindkey "${key[Shift - Tab]}" reverse-menu-complete

bindkey "^P" history-substring-search-up
bindkey "^N" history-substring-search-down
bindkey '^H' backward-kill-word
bindkey '^[[3;5~' kill-word
bindkey '^[[1;5C' forward-word
bindkey '^[[1;5D' backward-word


# ┏━━━━━━━━━━━━━━━━━━━━━━━
# ┃ Window Title
# ┗━━━━━━━━━━━━━━━━━━━━━━━
case $TERM in
termite | *xterm* | rxvt | rxvt-unicode | rxvt-256color | rxvt-unicode-256color | dterm | kterm | Eterm)
	precmd() {
		print -Pn "\e]0;[%n@%M][%~]%#\a"
	}
	preexec() { print -Pn "\e]0;[%n@%M][%~]%# ($1)\a"; }
	;;
screen | screen-256color)
	precmd() {
		vcs_info
		print -Pn "\e]83;title \"$1\"\a"
		print -Pn "\e]0;$TERM - (%L) [%n@%M]%# [%~]\a"
	}
	preexec() {
		print -Pn "\e]83;title \"$1\"\a"
		print -Pn "\e]0;$TERM - (%L) [%n@%M]%# [%~] ($1)\a"
	}
	;;
esac


# ┏━━━━━━━━━━━━━━━━━━━━━━━
# ┃ fzf & rg
# ┗━━━━━━━━━━━━━━━━━━━━━━━
export FZF_DEFAULT_OPTS='-m --height 70% --border=sharp --layout=reverse'

if type rg &>/dev/null; then
	export FZF_DEFAULT_COMMAND='rg --files --hidden'
fi

test -r /usr/share/fzf/key-bindings.zsh && . /usr/share/fzf/key-bindings.zsh >/dev/null 2>/dev/null || true
test -r /usr/share/fzf/completion.zsh && . /usr/share/fzf/completion.zsh >/dev/null 2>/dev/null || true
test -r /usr/share/doc/fzf/key-bindings.zsh && . /usr/share/doc/fzf/key-bindings.zsh >/dev/null 2>/dev/null || true
test -r /usr/share/doc/fzf/completion.zsh && . /usr/share/doc/fzf/completion.zsh >/dev/null 2>/dev/null || true

fzf-workspace-widget() {
	local cmd="${FZF_ALT_C_COMMAND:-"command ls -1 $WORKSPACE"}"
	setopt localoptions pipefail no_aliases 2>/dev/null
	local dir="$(eval "$cmd" | FZF_DEFAULT_OPTS="--height ${FZF_TMUX_HEIGHT:-40%} --reverse --bind=ctrl-z:ignore $FZF_DEFAULT_OPTS $FZF_ALT_C_OPTS" $(__fzfcmd) +m)"
	if [[ -z "$dir" ]]; then
		zle redisplay
		return 0
	fi
	zle push-line
	BUFFER="cd $WORKSPACE/${(q)dir}"
	zle accept-line
	local ret=$?
	unset dir
	zle reset-prompt
	return $ret
}
zle -N fzf-workspace-widget
bindkey '\eo' fzf-workspace-widget


# ┏━━━━━━━━━━━━━━━━━━━━━━━
# ┃ Others
# ┗━━━━━━━━━━━━━━━━━━━━━━━
test -r ~/.opam/opam-init/init.zsh && source ~/.opam/opam-init/init.zsh >/dev/null 2>/dev/null || true
